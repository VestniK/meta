/*
 * Meta language compiler
 * Copyright (C) 2014  Sergey Vidyuk <sir.vestnik@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package test.intops;

export:

int distCall(int x)
{
    return dist(x+5);
}

private int dist(int x, int y = 3)
{
    return x*x + 2*y*y;
}

int distCallFull(int x)
{
    return -dist(x+5, x);
}

int constFoo()
{
    return 5;
}

int poly(int x)
{
    auto common = -x+3;
    return 5*common*common - 6*common + 3;
}

int varsUsage(int x)
{
    int y;
    int z = 5;
    y = +x + z;
    z = y*x;
    return x + y + z;
}

int abs(int x)
{
    auto res = x;
    if (x < 0)
        res = -x;
    return res;
}

int sign(int x)
{
    if (x < 0)
        return -1;
    else if (x > 0)
        return +1;
    return 0;
}

int assigment(int x)
{
    int a;
    int b;
    auto c = a = b = x + 5;
    return a + b + c;
}
